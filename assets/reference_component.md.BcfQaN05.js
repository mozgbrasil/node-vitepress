import{_ as i,c as a,o as e,ag as n}from"./chunks/framework.B-XtCDNB.js";const c=JSON.parse('{"title":"Mozg","titleTemplate":"Web Components","description":"Sistemas e informaÃ§Ã£o","frontmatter":{"outline":"deep","title":"Mozg","titleTemplate":"Web Components","description":"Sistemas e informaÃ§Ã£o","head":[["link",{"rel":"canonical","href":"https://mozg.com.br/reference/component.html"}],["script",{"type":"application/ld+json"},"{\\n  \\"@context\\":\\"http://schema.org\\",\\n  \\"@type\\":\\"TechArticle\\",\\n  \\"headline\\":\\"Mozg | Web Components\\",\\n  \\"inLanguage\\":\\"en\\",\\n  \\"mainEntityOfPage\\":{\\n     \\"@type\\":\\"WebPage\\",\\n     \\"@id\\":\\"https://mozg.com.br/reference/component\\"\\n  },\\n  \\"keywords\\":\\"mozg, cerebrum\\",\\n  \\"url\\":\\"https://mozg.com.br/reference/component\\"\\n}"]]},"headers":[],"relativePath":"reference/component.md","filePath":"pt/reference/component.md","lastUpdated":1759925264000}'),t={name:"reference/component.md"};function l(p,s,o,h,r,k){return e(),a("div",null,[...s[0]||(s[0]=[n(`<h1 id="web-components" tabindex="-1">Web Components <a class="header-anchor" href="#web-components" aria-label="Permalink to &quot;Web Components&quot;">â€‹</a></h1><h3 id="o-que-sao-web-components" tabindex="-1"><strong>O que sÃ£o Web Components?</strong> <a class="header-anchor" href="#o-que-sao-web-components" aria-label="Permalink to &quot;**O que sÃ£o Web Components?**&quot;">â€‹</a></h3><p><a href="https://developer.mozilla.org/en-US/docs/Web/API/Web_components" target="_blank" rel="noreferrer">Web Components</a> sÃ£o uma tecnologia nativa do navegador que permite criar componentes encapsulados e reutilizÃ¡veis, com uma interface bem definida. Esses componentes podem ser usados em qualquer framework ou atÃ© em projetos sem framework, como se fossem elementos HTML personalizados.</p><p>A ideia Ã© que vocÃª crie um componente que seja independente de qualquer tecnologia especÃ­fica, e depois use esse componente onde quiser, seja em React, Angular, Vue, ou atÃ© em um projeto sem nenhum framework.</p><h3 id="ðŸ”¥-nosso-web-component-esta-no-npm" tabindex="-1">ðŸ”¥ Nosso Web Component estÃ¡ no NPM! <a class="header-anchor" href="#ðŸ”¥-nosso-web-component-esta-no-npm" aria-label="Permalink to &quot;ðŸ”¥ Nosso Web Component estÃ¡ no NPM!&quot;">â€‹</a></h3><p>Agora vocÃª pode usar o <strong>[node-web-components]</strong> diretamente no seu projeto instalando via NPM! Isso significa mais praticidade, atualizaÃ§Ãµes fÃ¡ceis e compatibilidade com diversos frameworks e bibliotecas.</p><h4 id="ðŸš€-por-que-usar-via-npm" tabindex="-1">ðŸš€ <strong>Por que usar via NPM?</strong> <a class="header-anchor" href="#ðŸš€-por-que-usar-via-npm" aria-label="Permalink to &quot;ðŸš€ **Por que usar via NPM?**&quot;">â€‹</a></h4><p>âœ… <strong>Facilidade de instalaÃ§Ã£o</strong> â€“ Basta rodar um comando e pronto! âœ… <strong>AtualizaÃ§Ãµes simplificadas</strong> â€“ Sempre tenha a versÃ£o mais recente com melhorias e correÃ§Ãµes. âœ… <strong>IntegraÃ§Ã£o com qualquer projeto</strong> â€“ Funciona com Vanilla JS, React, Vue, Angular, Svelte e outros. âœ… <strong>Melhor organizaÃ§Ã£o do cÃ³digo</strong> â€“ Mantenha seu projeto modular e escalÃ¡vel.</p><p>ðŸ”— <a href="https://www.npmjs.com/~mozg" target="_blank" rel="noreferrer">Veja no NPM</a></p><h3 id="ðŸ“–-veja-ao-vivo-no-storybook" tabindex="-1">ðŸ“– Veja ao vivo no Storybook <a class="header-anchor" href="#ðŸ“–-veja-ao-vivo-no-storybook" aria-label="Permalink to &quot;ðŸ“– Veja ao vivo no Storybook&quot;">â€‹</a></h3><p>Explore e teste os componentes diretamente no nosso Storybook pÃºblico:</p><p>ðŸ”— <a href="https://mozgbrasil.github.io/node-web-components-storybook/" target="_blank" rel="noreferrer">https://mozgbrasil.github.io/node-web-components-storybook/</a></p><hr><h2 id="instalacao" tabindex="-1">InstalaÃ§Ã£o <a class="header-anchor" href="#instalacao" aria-label="Permalink to &quot;InstalaÃ§Ã£o&quot;">â€‹</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> node-web-components</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># ou</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yarn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> node-web-components</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># ou</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> node-web-components</span></span></code></pre></div><h2 id="uso-via-cdn-sem-build" tabindex="-1">Uso via CDN (sem build) <a class="header-anchor" href="#uso-via-cdn-sem-build" aria-label="Permalink to &quot;Uso via CDN (sem build)&quot;">â€‹</a></h2><p>Para testar rapidamente em um projeto estÃ¡tico, importe o bundle ESM direto da CDN.</p><div class="language-html vp-adaptive-theme"><button title="Copy code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&lt;!-- jsDelivr --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;module&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  src</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://cdn.jsdelivr.net/npm/node-web-components/dist/mozg-web-components.es.js&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&lt;!-- ou unpkg --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;module&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  src</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://unpkg.com/node-web-components/dist/mozg-web-components.es.js&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">mozg-button</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> variant</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;primary&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;Enviar&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">mozg-button</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h2 id="uso-rapido-html-vanilla" tabindex="-1">Uso rÃ¡pido (HTML/Vanilla) <a class="header-anchor" href="#uso-rapido-html-vanilla" aria-label="Permalink to &quot;Uso rÃ¡pido (HTML/Vanilla)&quot;">â€‹</a></h2><p>Importe o bundle ES Module uma Ãºnica vez e use os elementos personalizados no HTML.</p><div class="language-html vp-adaptive-theme"><button title="Copy code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;module&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;node-web-components/dist/mozg-web-components.es.js&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">mozg-button</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> variant</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;primary&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;Enviar&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">mozg-button</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h2 id="uso-em-frameworks" tabindex="-1">Uso em frameworks <a class="header-anchor" href="#uso-em-frameworks" aria-label="Permalink to &quot;Uso em frameworks&quot;">â€‹</a></h2><h3 id="react" tabindex="-1">React <a class="header-anchor" href="#react" aria-label="Permalink to &quot;React&quot;">â€‹</a></h3><div class="language-tsx vp-adaptive-theme"><button title="Copy code" class="copy"></button><span class="lang">tsx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// src/main.tsx</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;node-web-components/dist/mozg-web-components.es.js&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> App</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">mozg-button</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> variant</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;primary&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;Clique&lt;/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">mozg-button</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="vue" tabindex="-1">Vue <a class="header-anchor" href="#vue" aria-label="Permalink to &quot;Vue&quot;">â€‹</a></h3><div class="language-ts vp-adaptive-theme"><button title="Copy code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// main.ts</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;node-web-components/dist/mozg-web-components.es.js&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><h3 id="svelte" tabindex="-1">Svelte <a class="header-anchor" href="#svelte" aria-label="Permalink to &quot;Svelte&quot;">â€‹</a></h3><div class="language-svelte vp-adaptive-theme"><button title="Copy code" class="copy"></button><span class="lang">svelte</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&lt;!-- +page.svelte ou um layout raiz --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { onMount } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;svelte&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  onMount</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    await</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;node-web-components/dist/mozg-web-components.es.js&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  });</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // Alternativamente, inclua a tag &lt;script type=&quot;module&quot; ...&gt; via app.html</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">mozg-button</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> variant</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;success&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;OK&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">mozg-button</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><div class="language-html vp-adaptive-theme"><button title="Copy code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">mozg-button</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> variant</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;secondary&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;Salvar&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">mozg-button</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h3 id="angular" tabindex="-1">Angular <a class="header-anchor" href="#angular" aria-label="Permalink to &quot;Angular&quot;">â€‹</a></h3><p>No <code>app.module.ts</code>:</p><div class="language-ts vp-adaptive-theme"><button title="Copy code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { CUSTOM_ELEMENTS_SCHEMA, NgModule } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@angular/core&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">NgModule</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  schemas: [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">CUSTOM_ELEMENTS_SCHEMA</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> AppModule</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {}</span></span></code></pre></div><p>E importe o bundle em <code>main.ts</code>:</p><div class="language-ts vp-adaptive-theme"><button title="Copy code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;node-web-components/dist/mozg-web-components.es.js&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><h2 id="theming-e-estilos" tabindex="-1">Theming e estilos <a class="header-anchor" href="#theming-e-estilos" aria-label="Permalink to &quot;Theming e estilos&quot;">â€‹</a></h2><ul><li>Suporte a tema claro/escuro via CSS variables.</li><li>Exemplo de troca de tema global:</li></ul><div class="language-css vp-adaptive-theme"><button title="Copy code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">html</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.dark</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /* sobrescreva tokens de cor se necessÃ¡rio */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="acessibilidade-a11y" tabindex="-1">Acessibilidade (A11y) <a class="header-anchor" href="#acessibilidade-a11y" aria-label="Permalink to &quot;Acessibilidade (A11y)&quot;">â€‹</a></h2><ul><li>Componentes com foco acessÃ­vel e atributos ARIA quando aplicÃ¡vel.</li><li>Teste com navegadores e leitores de tela; reporte issues quando encontrar problemas.</li></ul><h2 id="performance" tabindex="-1">Performance <a class="header-anchor" href="#performance" aria-label="Permalink to &quot;Performance&quot;">â€‹</a></h2><ul><li>Bundle ESM para carregamento moderno.</li><li>ComponentizaÃ§Ã£o evita duplicaÃ§Ã£o e facilita lazy-loading quando necessÃ¡rio.</li></ul><h2 id="roadmap-resumo" tabindex="-1">Roadmap (resumo) <a class="header-anchor" href="#roadmap-resumo" aria-label="Permalink to &quot;Roadmap (resumo)&quot;">â€‹</a></h2><ul><li>Mais componentes de formulÃ¡rio e navegaÃ§Ã£o.</li><li>Melhorias de a11y, testes visuais e docs com exemplos.</li></ul><h2 id="links-uteis" tabindex="-1">Links Ãºteis <a class="header-anchor" href="#links-uteis" aria-label="Permalink to &quot;Links Ãºteis&quot;">â€‹</a></h2><ul><li>Pacote NPM: <a href="https://www.npmjs.com/package/node-web-components" target="_blank" rel="noreferrer">https://www.npmjs.com/package/node-web-components</a></li><li>Storybook: <a href="https://mozgbrasil.github.io/node-web-components-storybook/" target="_blank" rel="noreferrer">https://mozgbrasil.github.io/node-web-components-storybook/</a></li><li>Guia rÃ¡pido: consulte tambÃ©m <code>ReferÃªncia â†’</code> <a href="./backend-api">Backend API</a> para integraÃ§Ãµes de front com nossas APIs</li><li>Aplicativos mÃ³veis e PWA/TWA: <code>ReferÃªncia â†’</code> <a href="./app">Aplicativo mÃ³vel</a></li></ul>`,45)])])}const g=i(t,[["render",l]]);export{c as __pageData,g as default};
